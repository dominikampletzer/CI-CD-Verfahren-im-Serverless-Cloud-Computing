AWSTemplateFormatVersion: 2010-09-09

Parameters:
  Project:
    Description: Project name
    Type: String
  Repository:
    Description: Repository name
    Type: String
  Suffix:
    Description: Sanitized suffix name, safe to use for CF resource names
    Type: String
  Branch:
    Description: The original unsanitized branch name to reference in Git configuration
    Type: String
  Stage:
    Description: "Pipeline stage"
    Type: String
    AllowedValues: ["dev", "delivery"]
  RemotePreviewAccount:
    Description: "Remote child account: development or integration"
    Type: String
    AllowedPattern: (\d{12}|^$)
    ConstraintDescription: must be an AWS account ID
  RemoteDeliveryAccount:
    Description: "Remote delivery child account: production"
    Type: String
    Default: "NO_VALUE"
  ArtifactBucket:
    Description: "Artifact Bucket"
    Type: String
  PipelineKmsKeyArn:
    Description: "Pipeline KMS key"
    Type: String
  PipelineServiceRoleArn:
    Description: Service role ARN to pass to pipeline
    Type: String
  DynamicPipelineCleanupLambdaArn:
    Description: CF Stack cleanup Lambda ARN
    Type: String

Conditions:
  ShouldCreateForDelivery: !Equals [ !Ref Stage, "delivery" ]
  ShouldCreateForDev: !Equals [ !Ref Stage, "dev" ]

Mappings:
  StageToConfigMap:
    dev:
      config: "dev"
    int:
      config: "int"
    prod:
      config: "production"

# Url von Dev sollte die gleiche wie Int sein, damit das FE immer ein lauffähiges BE hat.
# Alternativ wäre auch ein "master" Deploy des BE auf Dev sinnvoll um einen festen Verbindungspunkt zum FE-Dev zu haben
# Oder man importiert sich den API-Gateway Endpoint mittels InputValue wenn man einen festen API-Gateway-Stack hat z.b. bei elb-delivery-master
  ApiUrlMap:
    dev:
      url: "https://API-Gateway-Int/Latest"
    int:
      url: "https://API-Gateway-Int/Latest"
    prod:
      url: "http://API-Gateway-Prod/Latest"

Resources:

  CodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref AWS::StackName
      Source:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        EnvironmentVariables:
          - Name: CONFIGURATION
            Value: !If
              - ShouldCreateForDelivery
              - !FindInMap [ StageToConfigMap, "int", "config" ]
              - !FindInMap [ StageToConfigMap, "dev", "config" ]
          - Name: APIDNS
            Value: !If
              - ShouldCreateForDelivery
              - !FindInMap [ ApiUrlMap, "int", "url" ]
              - !FindInMap [ ApiUrlMap, "dev", "url" ]
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !Ref PipelineServiceRoleArn
      TimeoutInMinutes: 10

  CodeBuildProd:
    Condition: ShouldCreateForDelivery
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join [ "-", [ !Ref AWS::StackName, "prod" ] ]
      Source:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        EnvironmentVariables:
          - Name: CONFIGURATION
            Value: !FindInMap [ StageToConfigMap, "prod", "config" ]
          - Name: APIDNS
            Value: !FindInMap [ ApiUrlMap, "prod", "url" ]
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !Ref PipelineServiceRoleArn
      TimeoutInMinutes: 10

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Join [ '-', [ !Ref Stage, !Ref Repository ] ]
      ArtifactStore:
        EncryptionKey:
          Id: !Ref PipelineKmsKeyArn
          Type: "KMS"
        Location: !Ref ArtifactBucket
        Type: "S3"
      RestartExecutionOnUpdate: False
      RoleArn: !Ref PipelineServiceRoleArn
      Stages:
        - Name: Checkout-SourceCode
          Actions:
            - Name: Checkout-SourceCode
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: "1"
              Configuration:
                Owner: !Ref Project
                Repo: !Ref Repository
                Branch: !Ref Branch
                PollForSourceChanges: !If [ ShouldCreateForDelivery, "true", "false" ]
                OAuthToken: "{{resolve:secretsmanager:GitHubToken:SecretString:GitHubToken}}"
              OutputArtifacts:
                - Name: "SourceArtifact"
              RunOrder: 1

        - Name: !If
            - ShouldCreateForDelivery
            - 'INT-Stage'
            - 'DEV-Stage'
          Actions:
            - Name: "Build"
              ActionTypeId:
                Category: "Build"
                Owner: AWS
                Provider: "CodeBuild"
                Version: "1"
              Configuration:
                ProjectName: !Ref CodeBuild
              InputArtifacts:
                - Name: "SourceArtifact"
              OutputArtifacts:
                - Name: BuildArtifact
              RunOrder: 1

            - Name: !If
                - ShouldCreateForDelivery
                - 'DeployS3AndCloudFrontToInt'
                - 'DeployS3AndCloudFrontToDev'
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                StackName: !Join [ '-', [ !Ref Stage, !Ref Repository, !Ref RemotePreviewAccount ] ]
                RoleArn: !Sub arn:aws:iam::${RemotePreviewAccount}:role/CodePipelineDeploymentRole-${AWS::Region}-${RemotePreviewAccount}
                TemplatePath: "SourceArtifact::infrastructure/distribution/template.yaml"
                ParameterOverrides: !Sub |
                  {
                    "BucketName": "${Stage}-${Repository}-${Suffix}-${RemotePreviewAccount}"
                  }
              RunOrder: 1
              RoleArn: !Sub arn:aws:iam::${RemotePreviewAccount}:role/CodePipelineServiceRole-${AWS::Region}-${RemotePreviewAccount}
              InputArtifacts:
                - Name: "SourceArtifact"

            - Name: !If
                - ShouldCreateForDelivery
                - 'deploy-to-int'
                - 'deploy-to-dev'
              ActionTypeId:
                Category: "Deploy"
                Owner: AWS
                Provider: "S3"
                Version: "1"
              Configuration:
                BucketName: !Join [ '-', [ !Ref Stage, !Ref Repository, !Ref Suffix, !Ref RemotePreviewAccount ] ]
                Extract: true
              InputArtifacts:
                - Name: "BuildArtifact"
              RunOrder: 2
              RoleArn: !Sub arn:aws:iam::${RemotePreviewAccount}:role/CodePipelineServiceRole-${AWS::Region}-${RemotePreviewAccount}

        - !If
          - ShouldCreateForDelivery
          - Name: "PROD-Approval"
            Actions:
              - Name: "ManualApproval"
                ActionTypeId:
                  Category: Approval
                  Owner: AWS
                  Provider: Manual
                  Version: "1"
                Configuration: { }
                RunOrder: 1
                Region: !Sub ${AWS::Region}
          - !Ref AWS::NoValue

        - !If
          - ShouldCreateForDelivery
          - Name: "PROD-Stage"
            Actions:
              - Name: "Build"
                ActionTypeId:
                  Category: "Build"
                  Owner: AWS
                  Provider: "CodeBuild"
                  Version: "1"
                Configuration:
                  ProjectName: !Ref CodeBuildProd
                InputArtifacts:
                  - Name: "SourceArtifact"
                OutputArtifacts:
                  - Name: ProdBuildArtifact
                RunOrder: 1

              - Name: "deploy-infrastructure-to-prod"
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Provider: CloudFormation
                  Version: "1"
                Configuration:
                  ActionMode: CREATE_UPDATE
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  StackName: !Join [ '-', [ !Ref Stage, !Ref Repository, !Ref Suffix ] ]
                  RoleArn: !Sub arn:aws:iam::${RemoteDeliveryAccount}:role/CodePipelineDeploymentRole-${AWS::Region}-${RemoteDeliveryAccount}
                  TemplatePath: "SourceArtifact::infrastructure/distribution/template.yaml"
                  ParameterOverrides: !Sub |
                    {
                      "BucketName": "${Stage}-${Repository}-${Suffix}-${RemoteDeliveryAccount}"
                    }
                RunOrder: 1
                RoleArn: !Sub arn:aws:iam::${RemoteDeliveryAccount}:role/CodePipelineServiceRole-${AWS::Region}-${RemoteDeliveryAccount}
                InputArtifacts:
                  - Name: "SourceArtifact"

              - Name: "deploy-to-prod"
                ActionTypeId:
                  Category: "Deploy"
                  Owner: AWS
                  Provider: "S3"
                  Version: "1"
                Configuration:
                  BucketName: !Join [ '-', [ !Ref Stage, !Ref Repository, !Ref Suffix, !Ref RemoteDeliveryAccount ] ]
                  Extract: true
                InputArtifacts:
                  - Name: "ProdBuildArtifact"
                RunOrder: 2
                RoleArn: !Sub arn:aws:iam::${RemoteDeliveryAccount}:role/CodePipelineServiceRole-${AWS::Region}-${RemoteDeliveryAccount}
          - !Ref AWS::NoValue

  CleanupS3StackAndCloudFrontStack:
    Type: "AWS::CloudFormation::CustomResource"
    Condition: ShouldCreateForDev
    Version: '1.0'
    Properties:
      ServiceToken: !Ref DynamicPipelineCleanupLambdaArn
      RoleArn: !Sub arn:aws:iam::${RemotePreviewAccount}:role/CodePipelineServiceRole-${AWS::Region}-${RemotePreviewAccount}
      Region: !Ref AWS::Region
      StackName: !Join [ '-', [ !Ref Stage, !Ref Repository, !Ref RemotePreviewAccount ] ]

  CleanupS3Bucket:
    Condition: ShouldCreateForDev
    DependsOn: CleanupS3StackAndCloudFrontStack
    Type: "AWS::CloudFormation::CustomResource"
    Version: '1.0'
    Properties:
      ServiceToken: !ImportValue S3CleanupLambdaStack:Arn # Lambda wurde vorab auf DEV_OPS initialisiert und findet nur in DEV einsatz
      RoleArn: !Sub arn:aws:iam::${RemotePreviewAccount}:role/CodePipelineServiceRole-${AWS::Region}-${RemotePreviewAccount}
      Region: !Ref AWS::Region
      BucketName: !Sub "${Stage}-${Repository}-${Suffix}-${RemotePreviewAccount}"
